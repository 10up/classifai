name: Linting

env:
  COMPOSER_VERSION: "2"
  COMPOSER_CACHE: "${{ github.workspace }}/.composer-cache"

on:
  push:
    branches:
      - develop
      - trunk
  pull_request:
    branches:
      - develop

jobs:
  eslint:
    name: eslint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Cache node_modules
      id: cache-node-modules
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
        path: node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

    - name: Setup node v16 and npm cache
      uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: 'npm'

    - name: Install Node dependencies
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      run: npm install

    - name: Generate linting report
      run: npm run lint:js -- --output-file eslint-report.json --format json
      continue-on-error: true

    - name: Annotate code linting results
      uses: ataylorme/eslint-annotate-action@v2
      with:
        repo-token: "${{ secrets.GITHUB_TOKEN }}"
        report-json: "eslint-report.json"

    - name: Update summary
      run: |
        npm_config_yes=true npx github:10up/eslint-json-to-md --path ./eslint-report.json --output ./eslint-report.md
        cat eslint-report.md >> $GITHUB_STEP_SUMMARY
      if: ${{ failure() }}

  phpcs:
    name: phpcs
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2.4.0

    - name: Set standard 10up cache directories
      run: |
        composer config -g cache-dir "${{ env.COMPOSER_CACHE }}"

    - name: Prepare composer cache
      uses: actions/cache@v2
      with:
        path: ${{ env.COMPOSER_CACHE }}
        key: composer-${{ env.COMPOSER_VERSION }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          composer-${{ env.COMPOSER_VERSION }}-

    - name: Set PHP version
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        coverage: none
        tools: composer:v2

    - name: Install dependencies
      run: composer install

    - name: PHPCS check
      run: vendor/bin/phpcs . --runtime-set testVersion 7.4-

  vipcs:
    name: vipcs
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: VIPCS check
      uses: 10up/wpcs-action@stable
      with:
        enable_warnings: true
        standard: 'WordPress-VIP-Go'
        excludes: 'tests'
