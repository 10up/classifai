(()=>{"use strict";var e={n:t=>{var a=t&&t.__esModule?()=>t.default:()=>t;return e.d(a,{a}),a},d:(t,a)=>{for(var r in a)e.o(a,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:a[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const t=window.React,a=window.wp.data,r=window.wp.editPost,n=window.wp.editor,s=window.wp.components,i=window.wp.i18n,o=window.wp.plugins,l=window.wp.element,c=window.wp.apiFetch;var u=e.n(c);const d=({feature:e})=>e&&ClassifAI?.opt_out_enabled_features?.includes(e)?(0,t.createElement)(s.Button,{href:ClassifAI?.profile_url,variant:"link",className:"classifai-disable-feature-link",target:"_blank",rel:"noopener noreferrer",label:(0,i.__)("Opt out of using this ClassifAI feature","classifai"),text:(0,i.__)("Disable this ClassifAI feature","classifai")}):null,{classifaiChatGPTData:p}=(window.wp.coreData,window.wp.compose,window.wp.url,window),w=({error:e})=>e?(0,t.createElement)("div",{className:"error"},e):null;(0,o.registerPlugin)("classifai-status-info",{render:()=>{const[e,o]=(0,l.useState)(!1),[c,f]=(0,l.useState)(!1),[m,E]=(0,l.useState)(!1),[_,P]=(0,l.useState)([]);if(!p||!p.enabledFeatures)return null;if(p.noPermissions&&1===parseInt(p.noPermissions))return null;const g=(0,a.select)("core/editor").getCurrentPostId(),y=(0,a.select)("core/editor").getCurrentPostType(),h=(0,a.select)("core/editor").getEditedPostAttribute("content"),b=()=>f(!1)&&P([])&&E(!1);return(0,t.createElement)(r.PluginPostStatusInfo,{className:"classifai-post-status"},c&&(0,t.createElement)(s.Modal,{title:(0,i.__)("Select a title","classifai"),onRequestClose:b,isFullScreen:!1,className:"title-modal"},e&&(0,t.createElement)(s.Spinner,null),!e&&_&&(0,t.createElement)((({data:e})=>e?(0,t.createElement)(t.Fragment,null,e.map(((r,n)=>(0,t.createElement)("div",{className:"classifai-title",key:n},(0,t.createElement)("textarea",{rows:"5",onChange:t=>{e[n]=t.target.value,P(e)}},r),(0,t.createElement)(s.Button,{variant:"secondary",onClick:async()=>{const e=(0,a.select)("core/editor").isEditedPostDirty();(0,a.dispatch)("core/editor").editPost({title:_[n]}),b(),e||await(0,a.dispatch)("core").saveEditedEntityRecord("postType",y,g)}},(0,i.__)("Select","classifai")))))):null),{data:_}),!e&&m&&(0,t.createElement)(w,{error:m}),!e&&(0,t.createElement)(d,{feature:"feature_title_generation"})),p.enabledFeatures.map((e=>{const a=e?.path;return(0,t.createElement)(n.PostTypeSupportCheck,{key:e?.feature,supportKeys:e?.feature},(0,t.createElement)(s.Button,{className:e?.feature,variant:"secondary",onClick:()=>(async e=>{o(!0),f(!0),u()({path:e,method:"POST",data:{id:g,content:h}}).then((e=>{P(e),E(!1),o(!1)}),(e=>{E(e?.message),P([]),o(!1)}))})(a)},e?.buttonText))})))}})})();